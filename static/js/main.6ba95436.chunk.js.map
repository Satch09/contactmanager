{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/textInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContacts.js","components/pages/About.js","components/pages/NotFound.js","components/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","phone","email","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","deleteClickHandler","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","textInputGroup","EditContacts","updateContact","match","params","put","About","version","NotFound","Test","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kTAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACvB,OAAOA,EAAOC,MACd,IAAK,iBACJ,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACHH,EADJ,CAECK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGnE,IAAK,cACJ,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACHH,EADJ,CAECK,SAAQ,CAAIJ,EAAOQ,SAAXC,OAAAP,OAAAQ,EAAA,EAAAR,CAAuBH,EAAMK,aAEvC,IAAK,iBACJ,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACHH,EADJ,CAECK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,QAAQD,GAAMD,EAAUN,EAAOQ,QAAWF,MAE1G,QACC,OAAOP,IAKIa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MAEEtB,MAAQ,CACPK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAJ7De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAQqBC,IAChBC,IAAI,8CATT,OAQSN,EARTE,EAAAK,KAWG9B,KAAKY,SAAS,CAACzB,SAAUoC,EAAIQ,OAXhC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAcG,OACCiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC5BkB,KAAKmC,MAAMC,cAhBjBzC,EAAA,CAA8B0C,aAsBjBC,EAAW5D,EAAQ4D,iBCCjBC,6MA1CbzD,MAAQ,CACP0D,iBAAiB,KAGlBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTC,IAAMc,OAAN,8CAAAlD,OAA2DF,IADlD,OAEfqB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASD,IAF5B,wBAAAmC,EAAAO,SAAAV,EAAAtB,yIAIP,IAAA2C,EAAA3C,KAAA4C,EACyB5C,KAAKmC,MAAM9C,QAArCC,EADCsD,EACDtD,GAAIuD,EADHD,EACGC,KAAMC,EADTF,EACSE,MAAOC,EADhBH,EACgBG,MACjBP,EAAmBxC,KAAKlB,MAAxB0D,gBACP,OACCP,EAAAb,EAAAc,cAACI,EAAD,KACE,SAAAtB,GAAS,IAASL,EAAYK,EAAZL,SAClB,OACCsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,uBACdf,EAAAb,EAAAc,cAAA,UAAKW,EAAM,IACVZ,EAAAb,EAAAc,cAAA,KAAGe,QAAS,kBAAMN,EAAK/B,SAAS,CAAC4B,iBAAkBG,EAAK7D,MAAM0D,mBAAmBQ,UAAU,mBAAmBE,MAAO,CAACC,OAAQ,aAC9HlB,EAAAb,EAAAc,cAAA,KAAGc,UAAU,eAAeE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OAASJ,QAASN,EAAKF,cAAca,KAAKX,EAAMrD,EAAIqB,KACnIsB,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAE,gBAAAhE,OAAkBF,IACzB2C,EAAAb,EAAAc,cAAA,KAAGc,UAAU,oBACZE,MAAO,CACNC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAIhBjB,EACAP,EAAAb,EAAAc,cAAA,MAAIc,UAAU,cACbf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCD,GACxCd,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCF,IAC/B,eArCGT,aC8BPqB,6MA9BXC,cAAgB,SAAArE,GAAM,IAEfsE,EADa9D,EAAKhB,MAAjBK,SACsBC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOA,IAC9DQ,EAAKc,SAAS,CACbzB,SAAUyE,6EAGH,IAAAjB,EAAA3C,KACR,OACCiC,EAAAb,EAAAc,cAACI,EAAD,KACE,SAAAtB,GAAS,IACF7B,EAAY6B,EAAZ7B,SACP,OAEC8C,EAAAb,EAAAc,cAACD,EAAAb,EAAMyC,SAAP,KACC5B,EAAAb,EAAAc,cAAA,MAAIc,UAAU,kBAAiBf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,WAA/B,SACC7D,EAASO,IAAI,SAAAL,GAAO,OACpB4C,EAAAb,EAAAc,cAAC4B,EAAD,CACC/C,IAAK1B,EAAQC,GACbD,QAASA,EACT0E,mBAAoBpB,EAAKgB,cAAcL,KAAKX,EAAMtD,EAAQC,kBAtB/C+C,aCAjB2B,EAAS,SAAC7B,GAAU,IAClB8B,EAAY9B,EAAZ8B,SACP,OACChC,EAAAb,EAAAc,cAAA,WACCD,EAAAb,EAAAc,cAAA,OAAKc,UAAU,2DACdf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACdf,EAAAb,EAAAc,cAAA,KAAGgC,KAAK,IAAIlB,UAAU,gBAAtB,IAAuCiB,EAAvC,KACAhC,EAAAb,EAAAc,cAAA,WACCD,EAAAb,EAAAc,cAAA,MAAIc,UAAU,sBACbf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACbf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YAAWf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBAA/C,UADD,KAEAf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACbf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAAWf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,wBAA1D,iBADD,KAEAf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACbf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAAWf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,oBAApD,WADD,KAEAf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACbf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,QAAQR,UAAU,YAAWf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBAAnD,UADD,WAUPgB,EAAOG,aAAe,CACrBF,SAAU,YAKID,iCC/BTI,EAAiB,SAAAC,GAQjB,IAPLC,EAOKD,EAPLC,MACAzB,EAMKwB,EANLxB,KACA7B,EAKKqD,EALLrD,MACAuD,EAIKF,EAJLE,YACAvF,EAGKqF,EAHLrF,KACAwF,EAEKH,EAFLG,SACAC,EACKJ,EADLI,MAEA,OACCxC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACdf,EAAAb,EAAAc,cAAA,SAAOwC,QAAS7B,GAAOyB,GACvBrC,EAAAb,EAAAc,cAAA,SAAOlD,KAAMA,EACZ6D,KAAMA,EACNG,UAAW2B,IAAW,+BAAgC,CAACC,aAAcH,IACrEF,YAAaA,EACbvD,MAAOA,EACPwD,SAAUA,IAEVC,GAASxC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,oBAAoByB,KAehDL,EAAeD,aAAe,CAC7BnF,KAAM,QAGQoF,QCkEAS,6MAnGb/F,MAAQ,CACP+D,KAAM,GACNE,MAAO,GACPD,MAAO,GACPgC,OAAQ,MAITN,SAAW,SAAAO,GAAC,OAAIjF,EAAKc,SAAL3B,OAAA+F,EAAA,EAAA/F,CAAA,GAAgB8F,EAAEE,OAAOpC,KAAOkC,EAAEE,OAAOjE,WAEzDkE,+CAAW,SAAA5D,EAAOX,EAAUoE,GAAjB,IAAAI,EAAAtC,EAAAE,EAAAD,EAAAsC,EAAA7D,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVoD,EAAEM,iBADQF,EAGmBrF,EAAKhB,MAA3B+D,EAHGsC,EAGHtC,KAAME,EAHHoC,EAGGpC,MAAOD,EAHVqC,EAGUrC,MAGR,KAATD,EANO,CAAApB,EAAAE,KAAA,eAOT7B,EAAKc,SAAS,CAACkE,OAAQ,CAACjC,KAAM,sBAPrBpB,EAAA6D,OAAA,oBAWG,KAAVvC,EAXO,CAAAtB,EAAAE,KAAA,eAYT7B,EAAKc,SAAS,CAACkE,OAAQ,CAAC/B,MAAO,uBAZtBtB,EAAA6D,OAAA,oBAgBG,KAAVxC,EAhBO,CAAArB,EAAAE,KAAA,gBAiBT7B,EAAKc,SAAS,CAACkE,OAAQ,CAAChC,MAAO,uBAjBtBrB,EAAA6D,OAAA,yBAqBJF,EAAa,CAClBvC,OACAE,QACAD,SAxBSrB,EAAAE,KAAA,GA2BQC,IAAM2D,KAAK,6CAA8CH,GA3BjE,QA2BJ7D,EA3BIE,EAAAK,KA4BVnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAI7CjC,EAAKc,SAAS,CACbiC,KAAM,GACNE,MAAO,GACPD,MAAO,GACPgC,OAAQ,KAEThF,EAAKqC,MAAMqD,QAAQC,KAAK,KAtCd,yBAAAhE,EAAAO,SAAAV,EAAAtB,yIA0CF,IAAA2C,EAAA3C,KAAA0F,EAC6B1F,KAAKlB,MAAnC+D,EADC6C,EACD7C,KAAME,EADL2C,EACK3C,MAAOD,EADZ4C,EACY5C,MAAOgC,EADnBY,EACmBZ,OAC3B,OACC7C,EAAAb,EAAAc,cAACI,EAAD,KACE,SAAAtB,GAAS,IAASL,EAAYK,EAAZL,SAClB,OACCsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACdf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,eACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACdf,EAAAb,EAAAc,cAAA,QAAMgD,SAAUvC,EAAKuC,SAAS5B,KAAKX,EAAMhC,IACxCsB,EAAAb,EAAAc,cAACyD,EAAD,CACCrB,MAAM,OACNzB,KAAK,OACL0B,YAAY,yBACZvD,MAAO6B,EACP2B,SAAU7B,EAAK6B,SACfC,MAAOK,EAAOjC,OAEfZ,EAAAb,EAAAc,cAACyD,EAAD,CACCrB,MAAM,QACNzB,KAAK,QACL0B,YAAY,mCACZvD,MAAO+B,EACPyB,SAAU7B,EAAK6B,SACfC,MAAOK,EAAO/B,QAEfd,EAAAb,EAAAc,cAACyD,EAAD,CACCrB,MAAM,QACNzB,KAAK,QACL0B,YAAY,iCACZvD,MAAO8B,EACP0B,SAAU7B,EAAK6B,SACfC,MAAOK,EAAOhC,QAEfb,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,cAC1BgC,UAAU,wCAxFIX,aCiHVuD,6MA/Gb9G,MAAQ,CACP+D,KAAM,GACNE,MAAO,GACPD,MAAO,GACPgC,OAAQ,MAeTN,SAAW,SAAAO,GAAC,OAAIjF,EAAKc,SAAL3B,OAAA+F,EAAA,EAAA/F,CAAA,GAAgB8F,EAAEE,OAAOpC,KAAOkC,EAAEE,OAAOjE,WAEzDkE,+CAAW,SAAA5D,EAAOX,EAAUoE,GAAjB,IAAAI,EAAAtC,EAAAE,EAAAD,EAAA+C,EAAAvG,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVoD,EAAEM,iBADQF,EAGmBrF,EAAKhB,MAA3B+D,EAHGsC,EAGHtC,KAAME,EAHHoC,EAGGpC,MAAOD,EAHVqC,EAGUrC,MAGR,KAATD,EANO,CAAApB,EAAAE,KAAA,eAOT7B,EAAKc,SAAS,CAACkE,OAAQ,CAACjC,KAAM,sBAPrBpB,EAAA6D,OAAA,oBAWG,KAAVvC,EAXO,CAAAtB,EAAAE,KAAA,eAYT7B,EAAKc,SAAS,CAACkE,OAAQ,CAAC/B,MAAO,uBAZtBtB,EAAA6D,OAAA,oBAgBG,KAAVxC,EAhBO,CAAArB,EAAAE,KAAA,gBAiBT7B,EAAKc,SAAS,CAACkE,OAAQ,CAAChC,MAAO,uBAjBtBrB,EAAA6D,OAAA,yBAqBJO,EAAgB,CACrBhD,OACAE,QACAD,SAGMxD,EAAMQ,EAAKqC,MAAM2D,MAAMC,OAAvBzG,GA3BGmC,EAAAE,KAAA,GA4BQC,IAAMoE,IAAN,8CAAAxG,OAAwDF,GAAMuG,GA5BtE,QA4BJtE,EA5BIE,EAAAK,KA8BVnB,EAAS,CAAC3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAG/CjC,EAAKc,SAAS,CACbiC,KAAM,GACNE,MAAO,GACPD,MAAO,GACPgC,OAAQ,KAEThF,EAAKqC,MAAMqD,QAAQC,KAAK,KAvCd,yBAAAhE,EAAAO,SAAAV,EAAAtB,6QAZHV,EAAMU,KAAKmC,MAAM2D,MAAMC,OAAvBzG,YACWsC,IAAMC,IAAN,8CAAArC,OAAwDF,WAApEiC,SACAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACbiC,KAAMxD,EAAQwD,KACdE,MAAO1D,EAAQ0D,MACfD,MAAOzD,EAAQyD,2IAiDR,IAAAH,EAAA3C,KAAA0F,EAC6B1F,KAAKlB,MAAnC+D,EADC6C,EACD7C,KAAME,EADL2C,EACK3C,MAAOD,EADZ4C,EACY5C,MAAOgC,EADnBY,EACmBZ,OAC3B,OACC7C,EAAAb,EAAAc,cAACI,EAAD,KACE,SAAAtB,GAAS,IAASL,EAAYK,EAAZL,SAClB,OACCsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACdf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,gBACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACdf,EAAAb,EAAAc,cAAA,QAAMgD,SAAUvC,EAAKuC,SAAS5B,KAAKX,EAAMhC,IACxCsB,EAAAb,EAAAc,cAACyD,EAAD,CACCrB,MAAM,OACNzB,KAAK,OACL0B,YAAY,yBACZvD,MAAO6B,EACP2B,SAAU7B,EAAK6B,SACfC,MAAOK,EAAOjC,OAEfZ,EAAAb,EAAAc,cAACyD,EAAD,CACCrB,MAAM,QACNzB,KAAK,QACL0B,YAAY,mCACZvD,MAAO+B,EACPyB,SAAU7B,EAAK6B,SACfC,MAAOK,EAAO/B,QAEfd,EAAAb,EAAAc,cAACyD,EAAD,CACCrB,MAAM,QACNzB,KAAK,QACL0B,YAAY,iCACZvD,MAAO8B,EACP0B,SAAU7B,EAAK6B,SACfC,MAAOK,EAAOhC,QAEfb,EAAAb,EAAAc,cAAA,SAAOlD,KAAK,SAASgC,MAAM,iBAC1BgC,UAAU,wCApGMX,aCPZ4D,EAAA,SAAA9D,GACd,OACCF,EAAAb,EAAAc,cAAA,WACCD,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aAAd,yBACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,6BACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,kBAAb,WAAuCb,EAAM2D,MAAMC,OAAOG,WCL9CC,EAAA,WACd,OACClE,EAAAb,EAAAc,cAAA,WACCD,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aAAYf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,uBAC1Bf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,qCCuBYoD,6MAxBbtH,MAAQ,CACP+D,KAAM,GACNE,MAAO,uFAGY,IAAAJ,EAAA3C,KACnBqG,MAAM,gDACJC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAvE,GAAI,OAAIY,EAAK/B,SAAS,CAC3BiC,KAAMd,EAAKc,KACXE,MAAOhB,EAAKgB,2CAIJ,IAAAoC,EACYnF,KAAKlB,MAApB+D,EADGsC,EACHtC,KAAME,EADHoC,EACGpC,MACb,OACCd,EAAAb,EAAAc,cAAA,WACCD,EAAAb,EAAAc,cAAA,UAAKW,GACLZ,EAAAb,EAAAc,cAAA,UAAKa,WApBSV,aCiCJoE,gMAtBb,OACCxE,EAAAb,EAAAc,cAACwE,EAAD,KACCzE,EAAAb,EAAAc,cAACyE,EAAA,EAAD,KACC1E,EAAAb,EAAAc,cAAA,OAAKc,UAAU,OACdf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACdf,EAAAb,EAAAc,cAAC0E,EAAD,CAAQ3C,SAAS,qBACjBhC,EAAAb,EAAAc,cAAC2E,EAAA,EAAD,KACC5E,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvD,IACjCzB,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWhB,IAC/ChE,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWpC,IAC5C5C,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWrB,IACjD3D,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWb,IACrCnE,EAAAb,EAAAc,cAAC4E,EAAA,EAAD,CAAOG,UAAWd,gBAfR9D,cCAE6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvB,MACvB,2DCbNwB,IAASC,OAAOtF,EAAAb,EAAAc,cAACsF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.6ba95436.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n\tswitch(action.type) {\n\tcase 'DELETE_CONTACT':\n\t\treturn {\n\t\t\t...state,\n\t\t\tcontacts: state.contacts.filter(contact => contact.id !== action.payload\n\t\t\t)\n\t\t};\n\tcase 'ADD_CONTACT':\n\t\treturn {\n\t\t\t...state,\n\t\t\tcontacts: [ action.payload, ...state.contacts ]\n\t\t};\n\tcase 'UPDATE_CONTACT':\n\t\treturn {\n\t\t\t...state,\n\t\t\tcontacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n};\n\n// This will be the global state of the app that everything works off of.\nexport class Provider extends Component {\n\n  state = {\n  \tcontacts: [],\n  \tdispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n  \tconst res = await axios\n  \t\t.get('https://jsonplaceholder.typicode.com/users');\n\n  \tthis.setState({contacts: res.data});\n  }\n  render() {\n  \treturn (\n  \t\t<Context.Provider value={this.state}>\n  \t\t\t{this.props.children}\n  \t\t</Context.Provider>\n  \t);\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {Consumer} from '../../context';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Contact extends Component {\n  static propTypes = {\n  \tcontact: PropTypes.object.isRequired\n  };\n  state = {\n  \tshowContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n  \tawait axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n  \tdispatch({type: 'DELETE_CONTACT', payload: id});\n  }\n  render() { // You can use this keyword since this it is being used inside of a class which has 'this' and also has a state\n  \tconst {id, name, phone, email} = this.props.contact;\n  \tconst {showContactInfo} = this.state;\n  \treturn (\n  \t\t<Consumer>\n  \t\t\t{value => { const {dispatch} = value;\n  \t\t\t\treturn(\n  \t\t\t\t\t<div className=\"card card-body mb-3\">\n  \t\t\t\t\t\t<h4>{name}{' '}\n  \t\t\t\t\t\t\t<i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}} />\n  \t\t\t\t\t\t\t<i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\n  \t\t\t\t\t\t\t<Link to={`contact/edit/${id}`}>\n  \t\t\t\t\t\t\t\t<i className=\"fas fa-pencil-alt\"\n  \t\t\t\t\t\t\t\t\tstyle={{\n  \t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\n  \t\t\t\t\t\t\t\t\t\tfloat: 'right',\n  \t\t\t\t\t\t\t\t\t\tcolor: 'black',\n  \t\t\t\t\t\t\t\t\t\tmarginRight: '1rem'\n  \t\t\t\t\t\t\t\t\t}}/>\n  \t\t\t\t\t\t\t</Link>\n  \t\t\t\t\t\t</h4>\n  \t\t\t\t\t\t{showContactInfo ? (\n  \t\t\t\t\t\t\t<ul className=\"list-group\">\n  \t\t\t\t\t\t\t\t<li className=\"list-group-item\">Email: {email}</li>\n  \t\t\t\t\t\t\t\t<li className=\"list-group-item\">Phone: {phone}</li>\n  \t\t\t\t\t\t\t</ul> ) : null}\n  \t\t\t\t\t</div>\n  \t\t\t\t);\n  \t\t\t}}\n  \t\t</Consumer>\n  \t);\n  }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport {Consumer} from '../../context';\n\nclass Contacts extends Component {\n\n    deleteContact = id => {\n    \tconst {contacts} = this.state;\n    \tconst newContacts = contacts.filter(contact => contact.id !== id);\n    \tthis.setState({\n    \t\tcontacts: newContacts\n    \t});\n    };\n    render() {\n    \treturn (\n    \t\t<Consumer>\n    \t\t\t{value => {\n    \t\t\t\tconst {contacts} = value; // To make code more readable by setting 'contacts' to 'value'\n    \t\t\t\treturn(\n    \t\t\t\t// React fragments reduce unneeded divs\n    \t\t\t\t\t<React.Fragment>\n    \t\t\t\t\t\t<h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n    \t\t\t\t\t\t{contacts.map(contact => (\n    \t\t\t\t\t\t\t<Contact\n    \t\t\t\t\t\t\t\tkey={contact.id}\n    \t\t\t\t\t\t\t\tcontact={contact}\n    \t\t\t\t\t\t\t\tdeleteClickHandler={this.deleteContact.bind(this, contact.id)}\n    \t\t\t\t\t\t\t/>\n    \t\t\t\t\t\t))}\n    \t\t\t\t\t</React.Fragment>\n    \t\t\t\t);\n    \t\t\t}}\n    \t\t</Consumer>\n    \t);\n    }\n}\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n// This is a function component which does not have any state\nconst Header = (props) => {\n\tconst {branding} = props;\n\treturn (\n\t\t<div>\n\t\t\t<nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<a href=\"/\" className=\"navbar-brand\"> {branding} </a>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\n\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<Link to='/' className=\"nav-link\"><i className=\"fas fa-home\"></i> Home </Link> </li>\n\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<Link to='/contact/add' className=\"nav-link\"><i className=\"fas fa-address-book\"></i> Add Contact </Link> </li>\n\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<Link to='/about' className=\"nav-link\"><i className=\"fas fa-question\"></i> About </Link> </li>\n\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t<Link to='/test' className=\"nav-link\"><i className=\"fas fa-plus\"></i> Test </Link> </li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</div>\n\t);\n};\n\nHeader.defaultProps = {\n\tbranding: 'Contacts'\n};\nHeader.propTypes = {\n\tbranding: PropTypes.string.isRequired\n};\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n\tlabel,\n\tname,\n\tvalue,\n\tplaceholder,\n\ttype,\n\tonChange,\n\terror\n}) => {\n\treturn (\n\t\t<div className=\"form-group\">\n\t\t\t<label htmlFor={name}>{label}</label>\n\t\t\t<input type={type}\n\t\t\t\tname={name}\n\t\t\t\tclassName={classnames('form-control form-control-lg', {'is-invalid': error})} // is invalid classname is-invalid is passed in (and set) only if error is set\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t{error && <div className=\"invalid-feedback\">{error}</div>}\n\t\t</div>\n\t);\n};\n\nTextInputGroup.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tplaceholder: PropTypes.string.isRequired,\n\tvalue: PropTypes.string.isRequired,\n\ttype: PropTypes.string.isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\terror: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n\ttype: 'text'\n};\n\nexport default TextInputGroup;\n","import React, {Component} from 'react';\n\n// Test implementation of a controlled component - meaning that the component is controlled by React.\n\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/textInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n  \tname: '',\n  \temail: '',\n  \tphone: '',\n  \terrors: {\n  \t}\n  };\n\n  onChange = e => this.setState({[e.target.name]: e.target.value})\n\n  onSubmit = async (dispatch, e) => {\n  \te.preventDefault();\n\n  \tconst {name, email, phone} = this.state;\n\n  \t// Check for errors\n  \tif(name === '') {\n  \t\tthis.setState({errors: {name: 'Name is required'}});\n  \t\treturn;\n  \t}\n\n  \tif(email === '') {\n  \t\tthis.setState({errors: {email: 'Email is required'}});\n  \t\treturn;\n  \t}\n\n  \tif(phone === '') {\n  \t\tthis.setState({errors: {phone: 'Phone is required'}});\n  \t\treturn;\n  \t}\n\n  \tconst newContact = {\n  \t\tname,\n  \t\temail,\n  \t\tphone\n  \t};\n\n  \tconst res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n  \tdispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n\n  \t// Clean state upon submit\n  \tthis.setState({\n  \t\tname: '',\n  \t\temail: '',\n  \t\tphone: '',\n  \t\terrors: {}\n  \t});\n  \tthis.props.history.push('/'); // After form has been successfully submitted, the user is returned back to the home page\n  \t// This will add '/' to the history of the component\n  };\n\n  render() {\n  \tconst {name, email, phone, errors} = this.state;\n  \treturn (\n  \t\t<Consumer>\n  \t\t\t{value => { const {dispatch} = value;\n  \t\t\t\treturn(\n  \t\t\t\t\t<div className=\"card mb-3\">\n  \t\t\t\t\t\t<div className=\"card-header\">Add Contact</div>\n  \t\t\t\t\t\t<div className=\"card-body\">\n  \t\t\t\t\t\t\t<form onSubmit={this.onSubmit.bind(this, dispatch)}>\n  \t\t\t\t\t\t\t\t<TextInputGroup\n  \t\t\t\t\t\t\t\t\tlabel=\"Name\"\n  \t\t\t\t\t\t\t\t\tname=\"name\"\n  \t\t\t\t\t\t\t\t\tplaceholder='Please enter a name...'\n  \t\t\t\t\t\t\t\t\tvalue={name}\n  \t\t\t\t\t\t\t\t\tonChange={this.onChange}\n  \t\t\t\t\t\t\t\t\terror={errors.name}\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t\t<TextInputGroup\n  \t\t\t\t\t\t\t\t\tlabel=\"Email\"\n  \t\t\t\t\t\t\t\t\tname=\"email\"\n  \t\t\t\t\t\t\t\t\tplaceholder='Please enter an email address...'\n  \t\t\t\t\t\t\t\t\tvalue={email}\n  \t\t\t\t\t\t\t\t\tonChange={this.onChange}\n  \t\t\t\t\t\t\t\t\terror={errors.email}\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t\t<TextInputGroup\n  \t\t\t\t\t\t\t\t\tlabel=\"Phone\"\n  \t\t\t\t\t\t\t\t\tname=\"phone\"\n  \t\t\t\t\t\t\t\t\tplaceholder='Please enter a phone number...'\n  \t\t\t\t\t\t\t\t\tvalue={phone}\n  \t\t\t\t\t\t\t\t\tonChange={this.onChange}\n  \t\t\t\t\t\t\t\t\terror={errors.phone}\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Add Contact\"\n  \t\t\t\t\t\t\t\t\tclassName=\"btn btn-light btn-block\"\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t</form>\n  \t\t\t\t\t\t</div>\n  \t\t\t\t\t</div>\n  \t\t\t\t);\n  \t\t\t}}\n  \t\t</Consumer>\n  \t);\n  }\n}\n\nexport default AddContact;","import React, {Component} from 'react';\n\n// Test implementation of a controlled component - meaning that the component is controlled by React.\n\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/textInputGroup';\nimport axios from 'axios';\n\n\nclass EditContacts extends Component {\n  state = {\n  \tname: '',\n  \temail: '',\n  \tphone: '',\n  \terrors: {\n  \t}\n  };\n\n  async componentDidMount() {\n  \tconst {id} = this.props.match.params;\n  \tconst res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n  \tconst contact = res.data;\n  \tthis.setState({\n  \t\tname: contact.name,\n  \t\temail: contact.email,\n  \t\tphone: contact.phone\n  \t});\n  }\n\n  onChange = e => this.setState({[e.target.name]: e.target.value})\n\n  onSubmit = async (dispatch, e) => {\n  \te.preventDefault();\n\n  \tconst {name, email, phone} = this.state;\n\n  \t// Check for errors\n  \tif(name === '') {\n  \t\tthis.setState({errors: {name: 'Name is required'}});\n  \t\treturn;\n  \t}\n\n  \tif(email === '') {\n  \t\tthis.setState({errors: {email: 'Email is required'}});\n  \t\treturn;\n  \t}\n\n  \tif(phone === '') {\n  \t\tthis.setState({errors: {phone: 'Phone is required'}});\n  \t\treturn;\n  \t}\n\n  \tconst updateContact = {\n  \t\tname,\n  \t\temail,\n  \t\tphone\n  \t};\n\n  \tconst {id} = this.props.match.params;\n  \tconst res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n  \tdispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n  \t// Clean state upon submit\n  \tthis.setState({\n  \t\tname: '',\n  \t\temail: '',\n  \t\tphone: '',\n  \t\terrors: {}\n  \t});\n  \tthis.props.history.push('/'); // After form has been successfully submitted, the user is returned back to the home page\n  \t// This will add '/' to the history of the component. The user will be redirected to '/'\n  };\n\n  render() {\n  \tconst {name, email, phone, errors} = this.state;\n  \treturn (\n  \t\t<Consumer>\n  \t\t\t{value => { const {dispatch} = value;\n  \t\t\t\treturn(\n  \t\t\t\t\t<div className=\"card mb-3\">\n  \t\t\t\t\t\t<div className=\"card-header\">Edit Contact</div>\n  \t\t\t\t\t\t<div className=\"card-body\">\n  \t\t\t\t\t\t\t<form onSubmit={this.onSubmit.bind(this, dispatch)}>\n  \t\t\t\t\t\t\t\t<TextInputGroup\n  \t\t\t\t\t\t\t\t\tlabel=\"Name\"\n  \t\t\t\t\t\t\t\t\tname=\"name\"\n  \t\t\t\t\t\t\t\t\tplaceholder='Please enter a name...'\n  \t\t\t\t\t\t\t\t\tvalue={name}\n  \t\t\t\t\t\t\t\t\tonChange={this.onChange}\n  \t\t\t\t\t\t\t\t\terror={errors.name}\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t\t<TextInputGroup\n  \t\t\t\t\t\t\t\t\tlabel=\"Email\"\n  \t\t\t\t\t\t\t\t\tname=\"email\"\n  \t\t\t\t\t\t\t\t\tplaceholder='Please enter an email address...'\n  \t\t\t\t\t\t\t\t\tvalue={email}\n  \t\t\t\t\t\t\t\t\tonChange={this.onChange}\n  \t\t\t\t\t\t\t\t\terror={errors.email}\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t\t<TextInputGroup\n  \t\t\t\t\t\t\t\t\tlabel=\"Phone\"\n  \t\t\t\t\t\t\t\t\tname=\"phone\"\n  \t\t\t\t\t\t\t\t\tplaceholder='Please enter a phone number...'\n  \t\t\t\t\t\t\t\t\tvalue={phone}\n  \t\t\t\t\t\t\t\t\tonChange={this.onChange}\n  \t\t\t\t\t\t\t\t\terror={errors.phone}\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t\t<input type=\"submit\" value=\"Update Contact\"\n  \t\t\t\t\t\t\t\t\tclassName=\"btn btn-light btn-block\"\n  \t\t\t\t\t\t\t\t/>\n  \t\t\t\t\t\t\t</form>\n  \t\t\t\t\t\t</div>\n  \t\t\t\t\t</div>\n  \t\t\t\t);\n  \t\t\t}}\n  \t\t</Consumer>\n  \t);\n  }\n}\n\nexport default EditContacts;","import React from 'react';\n\nexport default props => {\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"display-4\">About Contact Manager</h1>\n\t\t\t<p className=\"lead\">Simple to manage contacts</p>\n\t\t\t<p className=\"text-secondary\">Version {props.match.params.version}</p>\n\t\t</div>\n\t);\n};\n\n","import React from 'react';\n\nexport default () => {\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"display-4\"><span className='text-danger'>404 Page Not Found</span></h1>\n\t\t\t<p className=\"lead\">Sorry, that page does not exist</p>\n\t\t</div>\n\t);\n};\n","import React, { Component } from 'react';\n\n// Application lifecycle methods\n\nclass Test extends Component {\n  state = {\n  \tname: '',\n  \temail: ''\n  };\n\n  componentDidMount() { // Code in here will run if and when the component mounted\n  \tfetch('https://jsonplaceholder.typicode.com/users/1')\n  \t\t.then(response => response.json())\n  \t\t.then(data => this.setState({\n  \t\t\tname: data.name,\n  \t\t\temail: data.email\n  \t\t})\n  \t);\n  }\n   \trender() {\n  \tconst {name, email} = this.state;\n  \treturn (\n  \t\t<div>\n  \t\t\t<h1>{name}</h1>\n  \t\t\t<h2>{email}</h2>\n  \t\t</div>\n  \t);\n  }\n}\nexport default Test;\n\n\n\n","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContacts from './components/contacts/EditContacts';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/Test/Test';\nimport {Provider} from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nclass App extends Component {\n\t// id in the about section is a variable parameter\n\trender() {\n\t\treturn (\n\t\t\t<Provider>\n\t\t\t\t<Router>\n\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Header branding='Contact Mananger'/>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' component={Contacts} />\n\t\t\t\t\t\t\t\t<Route exact path='/about/:version' component={About} />\n\t\t\t\t\t\t\t\t<Route exact path='/contact/add' component={AddContact} />\n\t\t\t\t\t\t\t\t<Route exact path='/contact/edit/:id' component={EditContacts} />\n\t\t\t\t\t\t\t\t<Route exact path='/test' component={Test} />\n\t\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// Unregister() to register() below. Note this comes with some pitfalls.\n// Earn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}